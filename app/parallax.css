:root {
	--title: "Parallax Bake Shop Card";
	--author: "Matt Cannon";
	--contact: "mc@mattcannon.design";
	--description: "A whimsical bake shop card with a cupcake theme, parallax effects, dreamy text, and floating background layers.";
	--keywords: "cupcake animation, sweet treats, parallax effect, css animation, javascript, food theme, codepenchallenge, bakery banner, interactive header, dessert ui, creative design";
	--last-modified: "2025-05-27";
	--content-language: "en";
	--generator: "HTML5, CSS3, JavaScript, Web Animations API";
}

*,
*:after,
*:before {
	box-sizing: border-box;
}

:root {
	--x: 0;
	--y: 0;
}

html {
	color-scheme: light only;
}

body {
	display: flex;
	place-items: center;
	justify-content: center;
	min-height: 100svh;
	touch-action: none;
	font-family: "Rubik", sans-serif;
	margin: 0;
	padding: 0.5rem;
	background: linear-gradient(to bottom, #e68d9f, #ffffff),
		url("https://www.transparenttextures.com/patterns/asfalt-light.png");
	background-blend-mode: overlay;
}

article {
	width: 600px;
	aspect-ratio: 2 / 1.1;
	max-height: calc(100svh - 2rem);
	position: relative;
	overflow: hidden;
	border-radius: 4em;
	max-width: calc(100% - 2rem);
	filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.1));
}

@media (orientation: portrait) {
	article {
		min-height: 330px;
	}
}

.assets {
	position: absolute;
	inset: 0;
	border-radius: 4em;
	overflow: hidden;
	z-index: 0;
}

.assets > img {
	position: absolute;
	top: 0;
	left: 50%;
	translate: -50% 0;
	height: 100%;
	width: 660px;
	object-fit: cover;
	object-position: center 43%;
	user-select: none;
	pointer-events: none;
}

.assets > img:first-of-type {
	filter: saturate(1.5) brightness(0.9);
	object-position: calc(50% + (var(--x) * 30px)) calc(50% + (var(--y) * -20px));
}

.assets > img:last-of-type {
  object-position: calc(50% + (var(--x) * 40px)) calc(50% + (var(--y) * 10px));
  z-index: 99;
}

.assets h3 {
	position: absolute;
	left: 50%;
	top: 8%;
	margin: 0;
	font-size: 8rem;
	text-transform: uppercase;
	font-family: "Bebas Neue", sans-serif;
	color: white;
	translate: calc(-50% + (var(--x) * -30px)) calc(var(--y) * -20px);
	z-index: 4;
}

.content {
	min-height: 32%;
	position: absolute;
	bottom: 0;
	width: 100%;
	color: white;
	display: grid;
	gap: 0.2rem;
	place-items: center;
	align-content: center;
	padding-bottom: 0.5rem;
	z-index: 3;
}

.content svg {
	width: 20px;
}

.content p {
	margin: 0;
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 1.2rem;
	position: relative;
}

.content p:first-of-type::after {
	content: "";
	position: absolute;
	bottom: calc(100% + 1rem);
	left: 50%;
	width: 20ch;
	background: white;
	height: 1px;
	translate: -50% 0;
}

.content p:last-of-type {
	opacity: 0.8;
font-size: 0.8rem
}

.blur {
	--layers: 5;
	position: absolute;
	inset: 0;
	z-index: 1;
}

.blur .layer {
	--blur: calc(
		sin(((var(--layers) - var(--index)) / var(--layers)) * 90deg) * 5
	);
	--stop: calc(sin(((var(--index)) / var(--layers)) * 90deg) * 25);
	position: absolute;
	inset: 0;
	background: hsl(0 0% 60% / 0.015);
	backdrop-filter: blur(min(calc(var(--blur) * 1px), 4px));
	mask: radial-gradient(
		180% 160% at 45% 90%,
		#fff 10%,
		#0000 calc((10 + var(--stop)) * 1%)
	);
	z-index: 2;
}
